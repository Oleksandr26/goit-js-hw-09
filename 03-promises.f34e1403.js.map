{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SAEvC,IAAIC,EAAkB,EAetBH,EAAQI,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAMC,iBACN,MAAQC,MAAAC,EAAKC,KAAEA,EAAIC,OAAEA,GAAWL,EAAMM,OAAOC,SAC7C,IAAIC,EAAUL,EAAMM,MAChBC,EAASN,EAAKK,MACdE,EAAWC,OAAOP,EAAOI,OACzBI,EAAaD,OAAOJ,GAAWI,OAAOF,GAE1C,MAAMI,EAAaC,aAAY,KAvBjC,IAAuBC,EAAUd,EAwB7BJ,GAAmB,GAxBAkB,EAyBLlB,EAzBeI,EAyBEM,EAxB1B,IAAIS,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQF,EAAUd,GAElBiB,EAAOH,EAAUd,KAElBA,OAiBAsB,MAAK,EAACR,SAAEA,EAAQd,MAAEA,MACjBT,EAAAgC,OAAOC,QAAQ,uBAAqBV,QAAiBd,UAEtDyB,OAAM,EAACX,SAAEA,EAAQd,MAAEA,MAClBT,EAAAgC,OAAOG,QAAQ,sBAAoBZ,QAAed,UAEtD2B,QAAQC,IAAItB,GACRG,GAAYb,GACdiC,cAAcjB,KAGfD","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\n\nlet positionCounter = 0;\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(position, delay);\n      } else {\n        reject(position, delay);\n      }\n    }, delay);\n  });\n}\n\nformRef.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.target.elements;\n  let delayEl = delay.value;\n  let stepEL = step.value;\n  let amountEL = Number(amount.value);\n  let totalDelay = Number(delayEl) + Number(stepEL);\n\n  const intervalID = setInterval(() => {\n    positionCounter += 1;\n    createPromise(positionCounter, delayEl)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    console.log(delayEl);\n    if (amountEL <= positionCounter) {\n      clearInterval(intervalID);\n      return;\n    }\n  }, totalDelay);\n  // event.currentTarget.reset();\n}\n// delayEl + stepEL;\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$positionCounter","addEventListener","event","preventDefault","delay","delay1","step","amount","target","elements","delayEl","value","stepEL","amountEL","Number","totalDelay","intervalID","setInterval","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","Notify","success","catch","failure","console","log","clearInterval"],"version":3,"file":"03-promises.f34e1403.js.map"}