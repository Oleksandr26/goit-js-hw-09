{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAUC,SAASC,cAAc,SAEnCC,EAAkB,EAetBH,EAAQI,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAMC,iBACN,IAAgCC,EAAAF,EAAMG,OAAOC,SAArCC,EAAwBH,EAAxBI,MAAOC,EAAiBL,EAAjBK,KAAMC,EAAWN,EAAXM,OACjBC,EAAUJ,EAAMK,MAChBC,EAASJ,EAAKG,MACdE,EAAWC,OAAOL,EAAOE,OACzBI,EAAaD,OAAOJ,GAAWI,OAAOF,GAEpCI,EAAaC,aAAY,WAvBjC,IAAuBC,EAAUX,GAAVW,EAwBnBnB,GAAmB,EAxBUQ,EAyBEG,EAxB1B,IAAIS,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQF,EAAUX,GAElBc,EAAOH,EAAUX,KAElBA,OAiBAmB,MAAK,SAAAC,G,IAAGT,EAAQS,EAART,SAAUX,EAAKoB,EAALpB,MACjBb,EAAAkC,OAAOC,QAAQ,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANvB,EAAM,UAE9DwB,OAAM,SAAAJ,G,IAAGT,EAAQS,EAART,SAAUX,EAAKoB,EAALpB,MAClBb,EAAAkC,OAAOI,QAAQ,sBAAqCF,OAAfZ,EAAS,QAAYY,OAANvB,EAAM,UAE9D0B,QAAQC,IAAIxB,GACRG,GAAYd,GACdoC,cAAcnB,KAGfD,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\n\nlet positionCounter = 0;\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(position, delay);\n      } else {\n        reject(position, delay);\n      }\n    }, delay);\n  });\n}\n\nformRef.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.target.elements;\n  let delayEl = delay.value;\n  let stepEL = step.value;\n  let amountEL = Number(amount.value);\n  let totalDelay = Number(delayEl) + Number(stepEL);\n\n  const intervalID = setInterval(() => {\n    positionCounter += 1;\n    createPromise(positionCounter, delayEl)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    console.log(delayEl);\n    if (amountEL <= positionCounter) {\n      clearInterval(intervalID);\n      return;\n    }\n  }, totalDelay);\n  // event.currentTarget.reset();\n}\n// delayEl + stepEL;\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$positionCounter","addEventListener","event","preventDefault","_elements","target","elements","delay1","delay","step","amount","delayEl","value","stepEL","amountEL","Number","totalDelay","intervalID","setInterval","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","param","Notify","success","concat","catch","failure","console","log","clearInterval"],"version":3,"file":"03-promises.d8bb17e4.js.map"}